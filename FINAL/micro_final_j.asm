ORG 0
MOV DPTR,#MYCOM
C1: CLR A
    MOVC A,@A+DPTR
	ACALL COMNWRT
	ACALL DELAY
	JZ SEND_DAT
	INC DPTR
	SJMP C1
SEND_DAT:MOV DPTR,#LINE1
D1: CLR A
    MOVC A,@A+DPTR
	ACALL DATAWRT
	ACALL DELAY
	INC DPTR
	JZ AGAIN
	SJMP D1
AGAIN:MOV DPTR,#LINE2
	MOV A,#0C0H
	ACALL COMNWRT
X1:	CLR A
	MOVC A,@A+DPTR
	ACALL DATAWRT
	ACALL DELAY
	INC DPTR
	JZ AGAIN1
	SJMP X1
AGAIN1: 
MOV R7,#'X'
ACALL CHECK
MOV A,R7
MOV 60H,A
ACALL DATAWRT
MOV R7,#'X'
ACALL DELAY
MOV A,#','
ACALL DATAWRT
ACALL CHECK
MOV A,R7
MOV 61H,A
ACALL DATAWRT
MOV A,60H
CJNE A,#'6',CN1
MOV A,61H
CJNE A,#'1',CN2
ACALL CASE1    //6,1
CN1:
CN2:
MOV A,60H
CJNE A,#'9',CN3
MOV A,61H
CJNE A,#'3',CN4
ACALL CASE2  //9,3
CN3:
CN4:
MOV A,60H
CJNE A,#'2',CN5
MOV A,61H
CJNE A,#'8',CN6
ACALL CASE3  //2,8
CN5:
CN6:
MOV DPTR,#MYCOM
C12: CLR A
    MOVC A,@A+DPTR
	ACALL COMNWRT
	ACALL DELAY
	JZ SEND_DAT1
	INC DPTR
	SJMP C12
SEND_DAT1:
MOV DPTR,#FAIL
D12: CLR A
    MOVC A,@A+DPTR
	ACALL DATAWRT
	ACALL DELAY
	INC DPTR
	JZ AGAIN12
	SJMP D12
AGAIN12:SJMP AGAIN12

CASE1:
MOV 10H,#0FAH
MOV 11H,#0FBH
MOV 12H,#0F9H
MOV 13H,#0F1H
MOV 14H,#0C3H
MOV 15H,#014H
ACALL CASE_PRIME

CASE2:
MOV 10H,#0FBH
MOV 11H,#032H
MOV 12H,#0FAH
MOV 13H,#0BAH
MOV 14H,#0C2H
MOV 15H,#014H
ACALL CASE_PRIME

CASE3:
MOV 10H,#0F9H
MOV 11H,#0E3H
MOV 12H,#0FAH
MOV 13H,#06AH
MOV 14H,#0C3H
MOV 15H,#0B3H
ACALL CASE_PRIME

CHECK:
LOOP1:
ACALL KEY1
ACALL KEY2
ACALL KEY3
ACALL KEY4
CJNE R7,#'X',LOOP
SJMP LOOP1
LOOP:
RET

KEY1:
clr p3.4
MOV A,p3
ANL A,#0FH
MOV r2,A
cjne r2,#14,n1
MOV r7,#'7' 
n1: cjne r2,#13,n2
mov r7,#'4'
n2: cjne r2,#11,n3
mov r7,#'1'
n3: cjne r2,#7,n4
mov r7,#'X'
n4: lcall delay
SETB P3.4
RET
 
; Checking for Key Press on the Second Column of 4x4 Matrix
KEY2:
clr p3.5
MOV A,p3
ANL A,#0FH
MOV r2,A
cjne r2,#14,q1
mov r7,#'8'
q1: cjne r2,#13,q2
mov r7,#'5'
q2: cjne r2,#11,q3
mov r7,#'2'; A=65
q3: cjne r2,#7,q4
mov r7,#'0'
q4: lcall delay
SETB p3.5
RET
 
; Checking for Key Press On The Third Column of 4x4 Matrix
 
KEY3:
clr p3.6
MOV A,p3
ANL A,#0FH
MOV r2,A
 
cjne r2,#14,w1
mov r7,#'9'
w1: cjne r2,#13,w2
mov r7,#'6'
w2: cjne r2,#11,w3
mov r7,#'3'
w3: cjne r2,#7,w4
mov r7,#'X'
w4: lcall delay
SETB p3.6
RET
 
; Checking for Key Press on the Fourth Column of 4x4 Matrix
KEY4:
clr p3.7
MOV A,p3
ANL A,#0FH
MOV r2,A
cjne r2,#14,e1
mov r7,#'X'
e1: cjne r2,#13,e2
mov r7,#'X'
e2: cjne r2,#11,e3
mov r7,#'X'
e3: cjne r2,#7,e4
mov r7,#'X'
e4: lcall delay
SETB p3.7
RET
	
CASE_PRIME:
HERE:
SETB P2.3
ACALL ON1
CLR P2.3
SETB P2.4
ACALL ON2
CLR P2.4
ACALL OFF
SJMP HERE

ON1:
MOV TMOD,#01H
MOV TH0,10H
MOV TL0,11H
SETB TR0
LP: JNB TF0,LP
CLR TR0
CLR TF0
RET

ON2:
MOV TMOD,#01H
MOV TH0,12H
MOV TL0,13H
SETB TR0
LP1: JNB TF0,LP1
CLR TR0
CLR TF0
RET

OFF:
MOV TMOD,#01H                 //1ST OFF-2ND ON
MOV TH0,14H                 // FFFF-2ND ON   + 1ST OFF
MOV TL0,15H
SETB TR0
LOOP2: JNB TF0,LOOP2
CLR TR0
CLR TF0
RET



COMNWRT:
MOV P1,A
CLR P2.1
CLR P2.2
SETB P2.0
ACALL DELAY
CLR P2.0
RET

DATAWRT:
MOV P1,A
SETB P2.1
CLR P2.2
SETB P2.0
ACALL DELAY
CLR P2.0
RET

DELAY: MOV R3,#250
HERE2: MOV R4,#255
HE:  DJNZ R4,HE
       DJNZ R3,HERE2
RET

ORG 300H
MYCOM: DB 38H,0EH,01,06,80H,0
LINE1: DB "2R MANIPULATOR",0
LINE2: DB "(X,Y)-",0
FAIL:  DB "TRY AGAIN!",0

END
	   